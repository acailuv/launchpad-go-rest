definitions:
  base.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  user.CreateRequest:
    properties:
      email:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
    type: object
  user.FindByIDResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
  user.FindResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
  user.UpdateByIDRequest:
    properties:
      email:
        type: string
      old_password:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
    type: object
info:
  contact: {}
  description: This is a template for back end REST API server in Go.
  title: Launchpad Go Rest API
  version: "1.0"
paths:
  /v1/users:
    get:
      consumes:
      - application/json
      description: List all users without any filter and pagination support
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.FindResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base.ErrorResponse'
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base.ErrorResponse'
      summary: Create user
      tags:
      - Users
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base.ErrorResponse'
      summary: Delete user by ID
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Find a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.FindByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base.ErrorResponse'
      summary: Find user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateByIDRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base.ErrorResponse'
      summary: Update user by ID
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
